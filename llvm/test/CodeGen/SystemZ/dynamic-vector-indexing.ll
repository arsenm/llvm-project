; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 4
; RUN: llc -mtriple=s390x-linux-gnu < %s | FileCheck -check-prefixes=COMMON,BASE %s
; RUN: llc -mtriple=s390x-linux-gnu -mcpu=z13 < %s | FileCheck -check-prefixes=COMMON,Z13 %s

define <2 x i64> @insertelement_v2i64_var_idx(ptr %ptr, i64 %val, i64 %idx) {
; BASE-LABEL: insertelement_v2i64_var_idx:
; BASE:       # %bb.0:
; BASE-NEXT:    aghi %r15, -176
; BASE-NEXT:    .cfi_def_cfa_offset 336
; BASE-NEXT:    lg %r0, 8(%r3)
; BASE-NEXT:    lg %r1, 0(%r3)
; BASE-NEXT:    stg %r0, 168(%r15)
; BASE-NEXT:    stg %r1, 160(%r15)
; BASE-NEXT:    risbg %r1, %r5, 60, 188, 3
; BASE-NEXT:    stg %r4, 160(%r1,%r15)
; BASE-NEXT:    lg %r0, 168(%r15)
; BASE-NEXT:    lg %r1, 160(%r15)
; BASE-NEXT:    stg %r0, 8(%r2)
; BASE-NEXT:    stg %r1, 0(%r2)
; BASE-NEXT:    aghi %r15, 176
; BASE-NEXT:    br %r14
;
; Z13-LABEL: insertelement_v2i64_var_idx:
; Z13:       # %bb.0:
; Z13-NEXT:    vl %v24, 0(%r2), 3
; Z13-NEXT:    vlvgg %v24, %r3, 0(%r4)
; Z13-NEXT:    br %r14
  %vec = load <2 x i64>, ptr %ptr
  %insertelement = insertelement <2 x i64> %vec, i64 %val, i64 %idx
  ret <2 x i64> %insertelement
}

define <2 x i64> @insertelement_v2i64_oob_idx(ptr %ptr, i64 %val) {
; COMMON-LABEL: insertelement_v2i64_oob_idx:
; COMMON:       # %bb.0:
; COMMON-NEXT:    br %r14
  %vec = load <2 x i64>, ptr %ptr
  %insertelement = insertelement <2 x i64> %vec, i64 %val, i64 2
  ret <2 x i64> %insertelement
}

define i64 @extractelement_i64_var_idx(ptr %ptr, i64 %idx) {
; BASE-LABEL: extractelement_i64_var_idx:
; BASE:       # %bb.0:
; BASE-NEXT:    aghi %r15, -176
; BASE-NEXT:    .cfi_def_cfa_offset 336
; BASE-NEXT:    lg %r0, 0(%r2)
; BASE-NEXT:    lg %r1, 8(%r2)
; BASE-NEXT:    stg %r1, 168(%r15)
; BASE-NEXT:    stg %r0, 160(%r15)
; BASE-NEXT:    risbg %r1, %r3, 60, 188, 3
; BASE-NEXT:    lg %r2, 160(%r1,%r15)
; BASE-NEXT:    aghi %r15, 176
; BASE-NEXT:    br %r14
;
; Z13-LABEL: extractelement_i64_var_idx:
; Z13:       # %bb.0:
; Z13-NEXT:    vl %v0, 0(%r2), 3
; Z13-NEXT:    vlgvg %r2, %v0, 0(%r3)
; Z13-NEXT:    br %r14
  %vec = load volatile <2 x i64>, ptr %ptr
  %extractelement = extractelement <2 x i64> %vec, i64 %idx
  ret i64 %extractelement
}

define i64 @extractelement_i64_oob_idx(ptr %ptr, i64 %idx) {
; BASE-LABEL: extractelement_i64_oob_idx:
; BASE:       # %bb.0:
; BASE-NEXT:    lg %r0, 8(%r2)
; BASE-NEXT:    lg %r0, 0(%r2)
; BASE-NEXT:    br %r14
;
; Z13-LABEL: extractelement_i64_oob_idx:
; Z13:       # %bb.0:
; Z13-NEXT:    vl %v0, 0(%r2), 3
; Z13-NEXT:    br %r14
  %vec = load volatile <2 x i64>, ptr %ptr
  %extractelement = extractelement <2 x i64> %vec, i64 2
  ret i64 %extractelement
}
